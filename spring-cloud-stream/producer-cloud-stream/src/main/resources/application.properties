spring.application.name=producer-cloud-stream
spring.cloud.stream.kafka.binder.brokers=${KAFKA_URL:localhost:29092}
spring.cloud.stream.bindings.news-out-0.destination=news.json
spring.cloud.stream.bindings.news-out-0.content-type=application/json
spring.cloud.stream.bindings.news-out-0.producer.partition-key-expression=headers['partitionKey']
spring.cloud.stream.bindings.news-out-0.producer.partition-count=5
spring.cloud.stream.bindings.alert-out-0.destination=alert.json
spring.cloud.stream.bindings.alert-out-0.content-type=application/json
spring.cloud.stream.bindings.alert-out-0.producer.partition-key-expression=headers['partitionKey']
spring.cloud.stream.bindings.alert-out-0.producer.partition-count=5

management.endpoints.web.exposure.include=beans,env,health,info,metrics,mappings
management.endpoint.health.show-details=always

#---
spring.config.activate.on-profile=cloudkarafka
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.configuration.security.protocol=SASL_SSL
spring.cloud.stream.kafka.binder.configuration.sasl.mechanism=SCRAM-SHA-256
spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${CLOUDKARAFKA_USERNAME}" password="${CLOUDKARAFKA_PASSWORD}";
spring.cloud.stream.bindings.news-out-0.destination=${CLOUDKARAFKA_USERNAME}-news.json
spring.cloud.stream.bindings.alert-out-0.destination=${CLOUDKARAFKA_USERNAME}-alert.json
